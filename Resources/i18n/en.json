{
    "settings": {
        "title": "Settings",
        "language": "Language",
        "language_tooltip": "Change the display language",
        "game_folder": "Game Folder:",
        "launch_options": "Launch Options:",
        "process_priority": "Process Priority:",
        "auto_config": "Auto Config:",
        "tweaks": "Tweaks:",
        "general_tab": "General",
        "launcher_tab": "Launcher",
        "advanced_tab": "Advanced",
        "language_change": "Language Changed",
        "language_change_restart": "Please restart the application to fully apply the language change.",
        "configure_game": "Configure Game Settings",
        "force_120_fps": "Force 120 FPS",
        "apply_tweaks": "Apply Performance Tweaks",
        "enable_hdr": "Enable HDR",
        "disable_wounded": "Disable Wounded Effect",
        "open_engine_ini": "üîç Open Engine.ini",
        "game_folder_error": "Failed to detect Game Folder!",
        "importer": {
            "shader_hunting": "Shader Hunting:",
            "enable_hunting": "Enable Hunting",
            "dump_shaders": "Dump Shaders",
            "error_handling": "Error Handling:",
            "mute_warnings": "Mute Warnings",
            "calls_logging": "Calls Logging",
            "debug_logging": "Debug Logging",
            "importer_folder": "Importer Folder:",
            "folder": "Folder:",
            "ini_protection": "Ini Protection:",
            "enforce_rendering": "Enforce Rendering Settings"
        },
        "launcher": {
            "start_behavior": "Start Behavior:",
            "close_after_start": "Close Launcher After Game Start",
            "timeout": "Timeout:",
            "update_policy": "Update Policy:",
            "auto_update": "Auto Update",
            "channel": "Channel:",
            "ui_theme": "UI Theme:",
            "apply": "‚ü≤ Apply",
            "dev_mode": "Dev Mode",
            "connection": "Connection:",
            "github_token": "GitHub Token:",
            "create": "Create...",
            "verify_ssl": "Verify SSL",
            "use_proxy": "Use Proxy:",
            "proxy_type": "Type:",
            "proxy_dns": "Proxy DNS Via SOCKS5",
            "host": "Host:",
            "port": "Port:",
            "proxy_auth": "Proxy Requires Password",
            "user": "User:",
            "password": "Password:"
        },
        "advanced": {
            "update_policy": "Update Policy:",
            "overwrite_d3dx": "Overwrite d3dx.ini",
            "security": "Security:",
            "unsafe_mode": "Unsafe Mode",
            "run_pre_launch": "Run Pre-Launch:",
            "wait": "Wait",
            "custom_launch": "Custom Launch:",
            "run_post_load": "Run Post-Load:",
            "inject_libraries": "Inject Libraries:"
        }
    },
    "buttons": {
        "cancel": "Cancel",
        "close": "Close",
        "browse": "Browse...",
        "detect": "‚ü≥",
        "use_default": "Use Default",
        "patch_theme": "Patch Theme",
        "start": "Start",
        "install": "Install",
        "update": "Update to Latest Version",
        "repair": "Repair",
        "check_for_updates": "Check for Updates",
        "add_shortcut": "Add Desktop Shortcut",
        "open_mods_folder": "Open Mods Folder",
        "ok": "OK",
        "confirm": "Confirm",
        "load_backup": "Load Backup",
        "load_default": "Load Default",
        "skip": "Skip",
        "reset": "Reset",
        "keep": "Keep",
        "restore": "Restore"
    },
    "errors": {
        "fatal_error": "XXMI Launcher - Fatal Error",
        "failed_to_parse_args": "Failed to parse arguments: {args}",
        "failed_to_load_config": "Failed to load configuration! Falling back to default settings.",
        "unknown_model_importer": "Unknown model importer {importer_name}!",
        "unknown_model_importer_cmd_arg": "Model importer provided via command line argument `--xxmi={importer_name}` is unknown!",
        "unknown_model_importer_setting": "Model importer `{importer_name}` provided via `active_importer` setting is unknown!",
        "failed_to_get_versions": "Failed to get latest version list from GitHub!\n\n{error}",
        "loading_failed": "{importer} loading failed:\n{error}",
        "file_read_only": "File Read-Only Error",
        "file_read_only_message": "Cannot write to read-only file {path}!\n\nPress [Confirm] to remove this flag and continue.",
        "failed_to_write_critical_file": "Failed to write critical file: {path}!",
        "resource_not_found": "Resource not found:\n\n{resource_path}\n\nHint: You can also use these extensions: {extensions}",
        "github": {
            "ssl_verify": "Cannot verify SSL certificate for GitHub HTTPS connection!\n\nIf you trust your proxy, uncheck Verify SSL in launcher settings and try again.\n\n{error}",
            "connection": "Cannot establish HTTPS connection to GitHub!\n\nPlease check your antivirus, firewall, proxy, and VPN settings.\n\n{error}",
            "response": "Failed to parse GitHub response!",
            "version": "Failed to parse latest version!",
            "signature": "Failed to parse signature!",
            "asset": "Could not find asset matching '{asset_name_format}'!",
            "api_limit": "Your IP has reached the GitHub API request limit!\n\nGitHub servers will ignore further connection attempts for one hour.\n\nSet up (another) *proxy* or *GitHub token* in launcher settings for immediate access.",
            "bad_credentials": "GitHub personal access token is invalid!\n\nPlease configure the correct token in launcher settings.",
            "invalid_release_notes": "<font color=\"red\">‚ö† Error! Invalid release notes format! ‚ö†</font>",
            "unsigned_release": "<font color=\"red\">‚ò¢ Error! Release is unsigned! ‚ò¢</font>"
        },
        "path": {
            "not_absolute": "Directory path '{directory_path}' is not an absolute path!",
            "no_read": "Cannot read '{directory_path}' folder!",
            "no_write": "Cannot write to '{directory_path}' folder!",
            "no_execute": "Cannot run .exe in '{directory_path}' folder!",
            "no_access": "Cannot access '{directory_path}' folder!",
            "not_folder": "Path '{directory_path}' is not a folder!",
            "absolute_root": "Cannot set root directory \"{root_path}\" for absolute path \"{path}\"!",
            "file_not_found": "File '{file_path}' does not exist!",
            "not_file": "File '{file_path}' is not a file!",
            "file_read_only": "Cannot write to '{file_path}': file is read-only!",
            "curly_brackets": "Launcher initialization failed!\n\nCurly brackets { and } are not supported in path:\n{root_path}\n\nPlease reinstall the launcher to another location.\n"
        },
        "injector": {
            "not_found": "Injector file not found: {injector_lib_path}!",
            "load_failed": "Failed to load injector library!",
            "setup_failed": "Failed to setup injector library!",
            "unload_failed": "Failed to unload injector library!",
            "not_unhooked": "Invalid injector usage: {str(dll_path)} is not unhooked!",
            "another_instance": "Another instance of 3DMigotoLoader is running!",
            "load_dll_failed": "Failed to load {str(dll_path)}!",
            "missing_entry": "Library {str(dll_path)} is missing expected entry point!",
            "hook_failed": "Failed to set Windows hook for {str(dll_path)}!",
            "unknown_error": "Unknown error while hooking {str(dll_path)}!",
            "null_hook": "Hook for {str(dll_path)} is NULL!",
            "no_dll": "Invalid injector usage: dll path is not defined!",
            "no_process": "Invalid injector usage: target process is not defined!",
            "not_hooked": "Invalid injector usage: dll is not hooked!",
            "path_english": "Please rename all folders in the path to use only English letters:\n{dll_path}",
            "extra_lib": "Failed to inject extra library {dll_path}:\n{str(e)}!\nPlease check Advanced Settings -> Inject Libraries."
        },
        "package": {
            "detect_installed": "Failed to detect installed {package_name} version:\n\n{error}",
            "detect_latest": "Failed to detect latest {package_name} version:\n\n{error}",
            "verify_download": "Download data integrity verification failed!\n{error}",
            "verify_asset": "{asset_name} data integrity verification failed!\n{error}",
            "missing_manifest": "{package_name} package is missing manifest file!",
            "parse_manifest": "Failed to parse {package_name} manifest file!",
            "missing_file": "{package_name} package is missing critical file: {file_name}!",
            "invalid_signature": "File {file_name} signature is invalid!",
            "missing_signature": "{package_name} manifest file is missing signature for {file_name}!",
            "download_failed": "Failed to download {package_name} package {version} update:\n{error}",
            "install_failed": "Failed to install {package_name} package {version} update!\nPlease restart the launcher or computer and try again.\n\n{error}"
        },
        "msvc": {
            "verify_ctypes": "Failed to verify ctypes import!",
            "verify_dll": "Failed to verify {dll}!",
            "verify_win32api": "Failed to verify win32api import!",
            "verify_get_version": "Failed to verify if GetFileVersionInfo is a function!",
            "verify_hiword": "Failed to verify if HIWORD is a function!",
            "verify_loword": "Failed to verify if LOWORD is a function!",
            "redistributable": "MSVC++ runtime libraries are damaged or not installed!\n\nPlease reinstall from: https://aka.ms/vs/17/release/vc_redist.x64.exe\n\nError: {error}"
        },
        "proxy": {
            "no_host": "No proxy host specified!",
            "no_port": "No proxy port specified!",
            "invalid_port": "Proxy port must be a numeric value!"
        },
        "sleepy": {
            "eof": "End of stream reached",
            "bad_7bit_format": "Incorrect 7-bit encoded integer format",
            "invalid_header": "[Sleepy::LogAssertInfo] Invalid BinaryFormatter header at stream position: {pos:x}. Expected object enumeration: {expected}, but got: {actual}!",
            "unsupported_data_type": "Unsupported data type",
            "invalid_indent": "Indent option {indent} has unsupported type {type}!",
            "unsupported_value_type": "Value {value} has unsupported type {type}!"
        },
        "packages": {
            "migoto": {
                "installation_damaged": "XXMI installation is damaged!\n\nDetails: {details}\n\nDo you want to automatically restore XXMI?",
                "failed_to_inject_extra": "Failed to inject {dll_paths}!",
                "failed_to_detect_process": "Failed to detect game process {process_name}!\n\nIf the game window takes longer than {timeout} seconds to appear, please adjust the timeout in launcher settings.\n\nIf the game crashes, try clearing the Mods and ShaderFixes folders.",
                "failed_to_start_process": "Failed to start {process_name}!",
                "failed_to_inject": "Failed to inject {dll_names}!",
                "failed_to_stop_process": "Failed to stop {process_name}!\n\nPlease close the game manually and press [OK] to continue.",
                "missing_critical_file": "XXMI package is missing critical file: {file_name}!"
            },
            "launcher": {
                "failed_to_start_installer": "Failed to start {asset_name}!\n\nIs it being blocked by antivirus or security settings?"
            },
            "updater": {
                "failed_to_start_updater": "Failed to start XXMI Updater.exe!\n\nIs it being blocked by antivirus or security settings?"
            },
            "model_importers": {
                "common": {
                    "failed_to_inject_extra_library": "Failed to inject extra library {dll_path}:\nFile not found!\nPlease check Advanced Settings -> Inject Libraries.",
                    "unknown_command": "Unknown command {name}!",
                    "failed_to_execute_command": "Failed to execute `{name} = {value}` command (auto_update.xcmd)!:\n{error}",
                    "file_removal_restriction": "File or folder removal is only allowed from Core or ShaderFixes folders!",
                    "folder_removal_restriction": "Explicitly removing entire Core or ShaderFixes folders is not allowed!",
                    "game_folder_not_specified": "Game installation folder not specified!",
                    "game_folder_not_found": "Specified game installation folder not found!",
                    "installation_failed": "{importer} installation failed:\n{error}",
                    "missing_setting": "Configuration is missing {setting_name} setting!",
                    "missing_config_value": "Configuration is missing value for section `{section}` option `{option}` key `{key}`",
                    "failed_to_set_option": "Failed to set section {section} option {option} to {value}: {error}",
                    "missing_critical_file": "Missing critical file: {ini_path}!",
                    "d3dx_ini_in_mods": "Mods folder cannot contain d3dx.ini!"
                },
                "wwmi": {
                    "path_not_absolute": "Cannot normalize path {game_path}: path is not absolute!",
                    "exe_not_found": "Cannot normalize path {game_path_original}: Wuthering Waves.exe not found!",
                    "invalid_folder_structure": "Game folder must contain `Wuthering Waves.exe` and both `Client` and `Engine` folders!",
                    "steam_repair_required": "Game installation must be repaired through Steam!",
                    "missing_folder": "Game folder must contain {dir_name} folder!",
                    "executable_not_found": "Game executable {process_name} not found!",
                    "ini_not_found": "Cannot find Core/WWMI/WuWa-Model-Importer.ini!",
                    "malformed_version": "WWMI version is malformed!",
                    "version_not_found": "WWMI version not found!",
                    "force_fps_failed": "Failed to force 120 FPS!\nPlease disable `Force 120 FPS` in launcher's general settings.\n\n{error}",
                    "configure_settings_failed": "Failed to configure in-game settings for WWMI!\nPlease disable `Configure Game Settings` in launcher's general settings and check in-game settings:\n* Graphics > `Graphics Quality` must be `Quality`.\n\n{error}",
                    "installation_damaged": "Wuthering Waves installation is damaged!\n\nRemoving NVIDIA plugins is no longer necessary and may cause crashes!\n\nPlease repair the game using the official launcher (wrench button in the top right)."
                },
                "zzmi": {
                    "executable_not_found": "Game executable {process_name} not found!",
                    "configure_settings_failed": "Failed to configure in-game settings for ZZMI!\n\n{error}",
                    "ini_not_found": "Cannot find Core/ZZMI/main.ini!",
                    "unknown_settings_format": "Unknown system settings entry format: {setting}!",
                    "malformed_version": "ZZMI version is malformed!",
                    "version_not_found": "ZZMI version not found!"
                },
                "srmi": {
                    "executable_not_found": "Game executable {process_name} not found!",
                    "force_fps_failed": "Failed to force 120 FPS: {error}",
                    "ini_not_found": "Cannot find Core/SRMI/main.ini!",
                    "registry_key_not_found": "Star Rail registry key not found!\n\nPlease first launch the game without 120 FPS patch, change any FPS value to create a record, then try again.\n\nNote: This patch only supports the global client, not the CN version.",
                    "unknown_graphics_settings_format": "Unknown graphics settings format: data type {regtype} is not REG_BINARY of {reg_binary}!",
                    "fps_key_not_found": "Unknown graphics settings format: \"FPS\" key not found!",
                    "malformed_version": "SRMI version is malformed!",
                    "version_not_found": "SRMI version not found!"
                },
                "gimi": {
                    "executable_not_found": "Game executable {process_name} or {cn_process_name} not found!",
                    "fps_unlocker_config_failed": "Failed to configure FPS unlocker:\n\n{error}\n\nPlease disable `Force 120 FPS` in launcher's general settings.",
                    "ini_not_found": "Cannot find Core/GIMI/main.ini!",
                    "registry_key_not_found": "Genshin Impact registry key not found!\n\nPlease launch the game through the original launcher to create the key, then try again.",
                    "unknown_settings_format": "Unknown settings format: data type {regtype} is not REG_BINARY of {reg_binary}!",
                    "graphicsdata_key_not_found": "Unknown graphics settings format: \"graphicsData\" key not found!",
                    "globalPerfData_key_not_found": "Unknown graphics settings format: \"globalPerfData\" key not found!",
                    "hdr_record_not_found": "HDR record not found in Genshin Impact registry!\n\nPlease launch the game through the official launcher to create the record, then try again.",
                    "malformed_version": "GIMI version is malformed!",
                    "version_not_found": "GIMI version not found!",
                    "terminate_fps_unlocker_failed": "Failed to terminate FPS unlocker!\n\nPlease close it manually and press [OK] to continue."
                }
            }
        }
    },
    "main": {
        "title": "XXMI Launcher",
        "theme_update_required": "Theme Update Required",
        "theme_update_message": "Selected {0} theme cannot be loaded!\n\nClick `Use Default` to use default theme instead (ensures proper visuals).\nClick `Patch Theme` to replace `custom-tkinter-theme.json` with new one.",
        "theme_folder_missing": "Failed to load {0} theme:\n\nTheme folder does not exist!",
        "theme_file_missing": "Failed to load {0} theme:\n\nTheme file `custom-tkinter-theme.json` does not exist!",
        "select_games": "Choose games to modify:",
        "unsafe_mode": "Unsafe Mode"
    },
    "tooltip": {
        "no_updates": "No updates available!",
        "discord_community": "AGMG Modding Community Discord",
        "github_repo": "XXMI Launcher GitHub",
        "gamebanana": "{importer} GameBanana",
        "open_settings": "Open Settings",
        "minimize": "Minimize",
        "close": "Close",
        "unsafe_mode_warning": "Allows the use of third-party 3dmigoto DLLs.\nPlease ensure you only use files from trusted sources!",
        "manage_importers": "Manage Model Importers",
        "wwmi": "Wuthering Waves Model Importer",
        "zzmi": "Zenless Zone Zero Model Importer",
        "srmi": "Honkai: Star Rail Model Importer",
        "gimi": "Genshin Impact Model Importer",
        "package_release_notes_up_to_date": "# What's new in {package_name} v{new_package_version}:\n{installed_release_notes}",
        "package_release_notes_update_available": "# Update {package_name} to v{new_package_version} to get:\n{latest_release_notes}",
        "package_release_notes_not_installed": "Click the **Install** button to set up the package.",
        "package_description_launcher": "*This package is the XXMI Launcher application itself, defining its functionality.*",
        "package_description_xxmi_libraries": "*The XXMI Libraries package is a custom 3dmigoto build used for handling data between the GPU and game processes.*",
        "package_description_model_importer": "*The Model Importer package provides the set of API functions needed for mods to work in a specific game.*",
        "package_release_notes": "{package_release_notes}\n\n<font color=\"#3366ff\">*<u>Left click</u> to open the {package_name} package GitHub release page for the full changelog.*</font>\n<font color=\"#aaaaaa\">{package_description}</font>",
        "importer_folder": "Path containing the `Mods` folder, `d3dx.ini` and other {importer} resources.\n**Absolute path**: Set any folder, e.g. `C:/Games/{importer}/`.\n**Relative path**: Set any folder inside the launcher folder, e.g. `{importer}/` (default).",
        "game_folder_wwmi": "Path containing \"Wuthering Waves.exe\" and both \"Client\" and \"Engine\" subfolders.\nTypically this folder is named \"Wuthering Waves Game\" inside the Wuthering Waves installation directory.",
        "game_folder_zzmi": "Path containing \"ZenlessZoneZero.exe\".",
        "game_folder_srmi": "Path containing \"StarRail.exe\".\nTypically this folder is named \"Games\" inside the \"DATA\" folder of the Star Rail installation directory.",
        "game_folder_gimi": "Path containing \"GenshinImpact.exe\" or \"YuanShen.exe\" (CN version).\nTypically this folder is named \"Genshin Impact Game\" inside the \"DATA\" folder of the Genshin Impact installation directory.",
        "overwrite_d3dx": "Enabled: {importer} updates will overwrite existing d3dx.ini to ensure it's up to date.\nDisabled: {importer} updates will leave existing d3dx.ini unchanged.",
        "unsafe_mode": "Enabled: Allows the use of third-party 3dmigoto dlls.\nDisabled: Doesn't allow the use of third-party 3dmigoto dlls.\nNote: If a third-party d3d11.dll doesn't support running from a nested directory, it won't load.",
        "option_enabled_effect": "Enabled: The option will have the specified effect.\nDisabled: The option will have no effect.",
        "run_pre_launch": "Windows console command to execute before the game exe is launched.\nNote: Set this if you need to perform actions before the game launches.",
        "wait_for_command": "Enabled: Wait (block) for the command to finish execution before launching the game exe.",
        "custom_launch": "Windows console command to run when clicking the launch button, instead of the default game exe launch method.\nTip: If you only want to change the injection method, leave this field empty.\nWarning! This command will also override the `Launch Options` in general settings.",
        "custom_launch_wwmi": "Warning! Make sure to pass `Client -DisableModule=streamline` parameters to Client-Win64-Shipping.exe to force DX11 mode!",
        "custom_launch_example": "Note: Set this if you want to launch the game exe with another custom exe.\nExample (equivalent to launcher's internal command for launching GI via FPS unlocker):\n`start /d \"C:\\Games\\XXMI Launcher\\Resources\\Packages\\GI-FPS-Unlocker\" unlockfps_nc.exe`",
        "custom_launch_inject_mode": "Defines how 3dmigoto is injected into the game process via custom launch.\n* Inject: Uses WriteProcessMemory, more reliable but requires direct memory access.\n* Hook: Uses SetWindowsHookEx, less reliable but might interfere less with anti-cheat systems.\n* Bypass: Skips 3dmigoto injection, only processes inject libraries field.",
        "run_post_load": "Windows console command to execute after the d3d11.dll hook is injected into the game exe.\nNote: Set this if you need to perform actions after 3dmigoto is injected.",
        "wait_post_command": "Enabled: Wait (block) for the command to finish execution before continuing program flow.",
        "inject_libraries": "List of additional DLL paths to inject into the game process. One path per line.\nInjection will be done via the WriteProcessMemory method.\nExample (injecting ReShade dll):\n`C:\\Games\\ReShade\\ReShade64.dll`",
        "enable_hunting": "Enabled: Allows toggling hunting mode via numpad [0] hotkey.\n* [d3dx.ini]: hunting = 2\nDisabled: Hunting mode is forcibly disabled.\n* [d3dx.ini]: hunting = 0",
        "dump_shaders": "Enabled: [Copy Hash] key in hunting mode also saves selected shader as a file in ShaderFixes.\n* [d3dx.ini]: marking_actions = clipboard hlsl asm regex\nDisabled: [Copy Hash] in hunting mode only copies selected shader hash to clipboard.\n* [d3dx.ini]: marking_actions = clipboard",
        "mute_warnings": "Enabled: No error warnings or beeps whatsoever. Ignorance is bliss.\n* [d3dx.ini]: show_warnings = 0\nDisabled: Ini parser error warnings and beeps on F10 will plague the poor soul.\n* [d3dx.ini]: show_warnings = 1",
        "calls_logging": "Enabled: Logs API usage.\n* [d3dx.ini]: calls = 1\nDisabled: No calls logging. Maximum performance.\n* [d3dx.ini]: calls = 0",
        "debug_logging": "Enabled: Super verbose debug logging.\n* [d3dx.ini]: debug = 1\nDisabled: No debug logging. Maximum performance.\n* [d3dx.ini]: debug = 0",
        "enforce_rendering": "Enabled: Ensures {importer} compatible [Rendering] section settings.\n* [d3dx.ini]: texture_hash = {texture_hash}\n* [d3dx.ini]: track_texture_updates = {track_texture_updates}\nDisabled: The above settings won't be forced into d3dx.ini.",
        "auto_close": "Enabled: The launcher will automatically close after game launch and 3dmigoto injection confirmation.\nDisabled: The launcher will stay running.",
        "launch_options_tooltip": "Command line arguments passed to the game executable when launching the game.",
        "launch_options_docs": "View more information about available launch options.",
        "github_token": "Personal access token used to increase GitHub API limits, helping avoid API request restrictions.\nYou can create a new token on the GitHub website with only public repository read permissions.",
        "github_token_button": "Open the **GitHub Personal Access Token** creation page.",
        "detect_game_folder": "Attempt to automatically detect existing game installation folder",
        "process_priority": "Controls the priority of the game process when launched through the launcher.\nHigher values provide better performance at the expense of other applications.\n\nWarning: Setting this to \"High\" may cause system instability on performance-constrained PCs.",
        "unlock_fps_wwmi": "Uses SpecialK to unlock the game's framerate limit.\nIf enabled, the launcher will launch the game through SpecialK and set the framerate limit to 120.",
        "unlock_fps_srmi": "Uses SpecialK to unlock the game's framerate limit.\nIf enabled, the launcher will launch the game through SpecialK and set the framerate limit to 120.",
        "unlock_fps_gimi": "Uses GIPF unlocker to unlock the game's framerate limit.\nIf enabled, the launcher will launch the game through the FPS unlocker.",
        "unlock_fps_window_mode": "Choose window mode for the FPS unlocker:\n - Fullscreen: Exclusive fullscreen mode\n - Borderless: Borderless window (fake fullscreen)\n - Window: Windowed mode",
        "apply_tweaks": "Improves game performance by adding extra settings to Engine.ini.\n\nThe launcher will add the following sections to Engine.ini:\n[/Script/Engine.StreamingSettings]\ns.AsyncLoadingThreadEnabled=True\n\n[/Script/Engine.Engine]\nbSmoothFrameRate=False\nMaximumLoopIterationCount=2147483647\nbUseFixedFrameRate=False\n\n[/Script/Engine.GarbageCollectionSettings]\ngc.MaxObjectsNonEditor=2147483647\ngc.MaxObjectsInEditor=2147483647\ngc.MaxObjectsInGame=2147483647\n\nUse \"üîç Open Engine.ini\" to view current settings.",
        "enable_hdr": "Enables High Dynamic Range (HDR) in the game.\nThis setting is only effective if your display supports HDR and Windows HDR is enabled.\n\nThe launcher will add the `-hdr` parameter to the game launch options.\nNote: Some HDR-capable TVs may not detect proper HDR support.",
        "timeout": "Controls how long the launcher waits for the game window to appear after launching.\nOnce timeout is reached, the game process is considered crashed.\nThe default value is **30**.",
        "auto_update": "Enabled: Launcher and {importer} updates will automatically download and install.\nDisabled: Use the special [‚ñ≤] button next to the [Start] button to manually download and install updates.",
        "update_channel": "**Auto**: Automatically detect update installation method.\n**MSI**: Install updates using native `.msi` installer.\n**ZIP**: Install updates using portable `.zip` package.",
        "launcher_theme": "Choose the launcher GUI theme.\nWarning! The `Default` theme will be overwritten by launcher updates!\nSteps to create a custom theme:\n1. Create a copy of the `Default` folder in the `Themes` folder.\n2. Rename the copy to the name you want to see in settings.\n3. Edit or replace any images (valid extensions: webp, jpeg, png, jpg).",
        "dev_mode": "Enabled: The launcher will track changes in `custom-tkinter-theme.json` and apply them instantly.\nDisabled: Theme changes won't be tracked.",
        "verify_ssl": "<font color=\"red\">‚ö† Only disable if you trust your proxy or other SSL-breaking service. ‚ö†</font>\n**Enabled**: Verify SSL certificates for GitHub downloads to maintain security.\n**Disabled**: Allow insecure connections, potentially vulnerable to man-in-the-middle attacks.",
        "proxy_enable": "Controls how the launcher connects to GitHub to download packages.\n**Enabled**: Use the specified proxy server to access the internet.\n**Disabled**: Use default system internet connection settings.",
        "proxy_type": "**HTTPS**: Traditional proxy protocol offering best security.\n**SOCKS5**: Newer and less secure, but excels at bypassing firewalls.",
        "proxy_dns": "**Enabled**: DNS requests are routed through the SOCKS5 proxy connection.\n**Disabled**: DNS requests will be routed through your ISP.",
        "proxy_host": "Proxy IP address (e.g. `123.12.1.231`) or domain name (e.g. `proxyprovider.com`).",
        "proxy_port": "Proxy port (e.g. `1080`).",
        "proxy_auth": "**Enabled**: Use specified username and password for proxy server authentication.\n**Disabled**: Don't use any credentials when accessing the proxy server.",
        "proxy_user": "Username provided by your proxy service provider.",
        "proxy_password": "Password provided by your proxy service provider.",
        "disable_wounded_effect": "Disables the red screen effect when wounded.\n\nThe launcher will modify UserSettings.ini, adding:\n[/Game/HighElves/Config/HighElvesSettings.HighElvesSettings_C]\nIsWoundBloodVFXEnabled=False",
        "configure_game_wwmi": "When enabled, adjusts game settings for better mod rendering.\nSpecifically, the launcher will modify \"Client\\Config\\UserSettings.ini\" adding:\n - `IsPointLightShadowEnabled=False`\n - `IsScreenSpaceReflectionEnabled=False`\n - `SubsurfaceScatteringQuality=0`",
        "configure_game_zzmi": "When enabled, adjusts game settings for better mod rendering.\nSpecifically, the launcher will modify \"GraphicsSettings.json\" to disable certain post-processing effects.",
        "configure_game_srmi": "When enabled, adjusts game settings for better mod rendering.\nSpecifically, the launcher will modify \"AppData\\LocalLow\\Cognosphere\\Star Rail\\Player.ini\" to disable certain post-processing effects.",
        "configure_game_gimi": "When enabled, adjusts game settings for better mod rendering.\nSpecifically, the launcher will add these commands to the [Constants] section in d3dx.ini:\n - `UseBloom=0`\n - `UseFXAA=0`\n - `UseVignette=0`\n\nIf disabled, these overrides will be removed (or left unchanged if manually edited)."
    },
    "bottom_bar": {
        "initializing_game_launch": "Initializing game launch...",
        "hooking_library": "Hooking {library_name} to {process_name}...",
        "verifying_library": "Verifying {library_name} load into {process_name}...",
        "injecting_library": "Injecting {library_name} to {process_name}...",
        "launching_game": "Launching game...",
        "waiting_for_process": "Waiting for {process_name} to start...",
        "closing_launcher": "Closing launcher...",
        "checking_for_updates": "Checking for updates...",
        "connecting_to_github": "Connecting to GitHub...",
        "downloading_asset": "Downloading {asset_name}...",
        "verifying_asset_integrity": "Verifying {asset_name} integrity...",
        "initializing_update_installation": "Initializing update installation...",
        "writing_asset_on_disk": "Writing {asset_name} on disk...",
        "moving_asset": "Moving {asset_name}...",
        "unpacking_asset": "Unpacking {asset_name}...",
        "format_size": "{size:.2f}{unit}"
    },
    "messages": {
        "default_title": "Message",
        "error_title": "Error",
        "warning_title": "Warning",
        "info_title": "Information",
        "wounded_effect_title": "Wounded Effect Detected",
        "wounded_effect_message": "It appears that wounded effects are enabled in game settings.\nMost mods don't support this effect, and textures will be damaged after taking a few hits.\n\nClick `Disable` to turn it off to ensure correct rendering of mod textures.\nClick `Keep Enabled` if you never get wounded or use a wounded effect removal tool.",
        "game_installation_detected": "Detected game installation:\n\n{game_path}\n\nPlease check if it is desired Game Folder or change it in General Settings.",
        "game_installations_detected": "Detected game installations:\n\nSelect desired Game Folder from the list below or set it in General Settings:\n",
        "invalid_ww_installation": "Invalid Wuthering Waves installation detected (Steam):\n{game_path}\n\nThe {folder_name} folder containing {exe_name} must be placed directly in:\n{common_folder}\n\nPlease run game file repair through Steam or fix it manually."
    },
    "updates": {
        "available_title": "Update Available"
    },
    "security": {
        "validation_failed": "Failed to validate unsafe settings!\n\n{msg}\n"
    },
    "status": {
        "ensuring_game_closed": "Ensuring game is closed...",
        "configuring_in_game_settings": "Configuring in-game settings...",
        "updating_engine_ini": "Updating Engine.ini...",
        "updating_game_user_settings_ini": "Updating GameUserSettings.ini...",
        "updating_wwmi_ini": "Updating WuWa-Model-Importer.ini...",
        "updating_gimi_ini": "Updating main.ini...",
        "checking_engine_plugins": "Checking engine plugins integrity...",
        "disabling_streamline_plugin": "Disabling Streamline plugin...",
        "restoring_streamline_plugin": "Restoring Streamline plugin...",
        "configuring_fps_unlocker": "Configuring FPS unlocker..."
    }
} 