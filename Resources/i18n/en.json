{
    "settings": {
        "title": "Settings",
        "language": "Language",
        "language_tooltip": "Change the display language",
        "game_folder": "Game Folder:",
        "launch_options": "Launch Options:",
        "process_priority": "Process Priority:",
        "auto_config": "Auto Config:",
        "tweaks": "Tweaks:",
        "general_tab": "General",
        "launcher_tab": "Launcher",
        "advanced_tab": "Advanced",
        "language_change": "Language Changed",
        "language_change_restart": "Please restart the application to fully apply the language change.",
        "configure_game": "Configure Game Settings",
        "force_120_fps": "Force 120 FPS",
        "apply_tweaks": "Apply Performance Tweaks",
        "enable_hdr": "Enable HDR",
        "disable_wounded": "Disable Wounded Effect",
        "open_engine_ini": "üîç Open Engine.ini",
        "game_folder_error": "Failed to detect Game Folder!",
        "importer": {
            "shader_hunting": "Shader Hunting:",
            "enable_hunting": "Enable Hunting",
            "dump_shaders": "Dump Shaders",
            "error_handling": "Error Handling:",
            "mute_warnings": "Mute Warnings",
            "calls_logging": "Calls Logging",
            "debug_logging": "Debug Logging",
            "importer_folder": "Importer Folder:",
            "folder": "Folder:",
            "ini_protection": "Ini Protection:",
            "enforce_rendering": "Enforce Rendering Settings"
        },
        "launcher": {
            "start_behavior": "Start Behavior:",
            "close_after_start": "Close Launcher After Game Start",
            "timeout": "Timeout:",
            "update_policy": "Update Policy:",
            "auto_update": "Auto Update",
            "channel": "Channel:",
            "ui_theme": "UI Theme:",
            "apply": "‚ü≤ Apply",
            "dev_mode": "Dev Mode",
            "connection": "Connection:",
            "github_token": "GitHub Token:",
            "create": "Create...",
            "verify_ssl": "Verify SSL",
            "use_proxy": "Use Proxy:",
            "proxy_type": "Type:",
            "proxy_dns": "Proxy DNS Via SOCKS5",
            "host": "Host:",
            "port": "Port:",
            "proxy_auth": "Proxy Requires Password",
            "user": "User:",
            "password": "Password:"
        },
        "advanced": {
            "update_policy": "Update Policy:",
            "overwrite_d3dx": "Overwrite d3dx.ini",
            "security": "Security:",
            "unsafe_mode": "Unsafe Mode",
            "run_pre_launch": "Run Pre-Launch:",
            "wait": "Wait",
            "custom_launch": "Custom Launch:",
            "run_post_load": "Run Post-Load:",
            "inject_libraries": "Inject Libraries:"
        }
    },
    "buttons": {
        "save": "Save",
        "cancel": "Cancel",
        "close": "Close",
        "browse": "Browse...",
        "detect": "‚ü≥",
        "about": "About...",
        "use_default": "Use Default",
        "patch_theme": "Patch Theme",
        "start": "Start",
        "install": "Install",
        "update": "Update packages to latest versions",
        "tools": "Tools",
        "repair": "Repair",
        "check_for_updates": "Check For Updates",
        "add_shortcut": "Add Desktop Shortcut",
        "open_mods_folder": "Open Mods Folder",
        "ok": "OK",
        "confirm": "Confirm",
        "load_backup": "Load Backup",
        "load_default": "Load Default",
        "skip": "Skip"
    },
    "errors": {
        "fatal_error": "XXMI Launcher - Fatal Error",
        "msvc_redistributable": "MSVC++ Redistributable is damaged or not installed!\n\nPlease reintall it from https://aka.ms/vs/17/release/vc_redist.x64.exe\n\nERROR: {0}",
        "failed_to_parse_args": "Failed to parse args: {args}",
        "failed_to_load_config": "Failed to load configuration! Falling back to defaults.",
        "unknown_model_importer": "Unknown model importer {importer_name}!",
        "unknown_model_importer_cmd_arg": "Unknown model importer supplied as command line arg `--xxmi={importer_name}`!",
        "unknown_model_importer_setting": "Unknown model importer `{importer_name}` supplied with `active_importer` setting!",
        "failed_to_get_versions": "Failed to get latest versions list from GitHub!\n\n{error}",
        "loading_failed": "{importer} Loading Failed:\n{error}",
        "file_read_only": "File Read Only Error",
        "file_read_only_message": "Failed to write Read Only file {path}!\n\nPress [Confirm] to remove this flag and continue.",
        "failed_to_write_critical_file": "Failed to write critical file: {path}!"
    },
    "main": {
        "title": "XXMI Launcher",
        "theme_update_required": "Theme Update Required",
        "theme_update_message": "Selected {0} theme cannot be loaded!\n\nClick `Use Default` to use default theme instead (ensures proper visuals).\nClick `Patch Theme` to replace `custom-tkinter-theme.json` with new one.",
        "theme_folder_missing": "Failed to load {0} theme:\n\nTheme folder does not exist!",
        "theme_file_missing": "Failed to load {0} theme:\n\nTheme file `custom-tkinter-theme.json` does not exist!",
        "select_games": "Choose games to modify:",
        "unsafe_mode": "Unsafe Mode"
    },
    "tooltip": {
        "no_updates": "No updates available!",
        "discord_community": "AGMG Modding Community Discord",
        "github_repo": "XXMI Launcher GitHub",
        "gamebanana": "{importer} GameBanana",
        "open_settings": "Open Settings",
        "minimize": "Minimize",
        "close": "Close",
        "unsafe_mode_warning": "Usage of 3-rd party 3dmigoto DLLs is allowed.\nMake sure to use ones only from a trusted source!",
        "package_release_notes_up_to_date": "# What's new in {package_name} v{new_package_version}:\n{installed_release_notes}",
        "package_release_notes_update_available": "# Update {package_name} to v{new_package_version} for:\n{latest_release_notes}",
        "package_release_notes_not_installed": "Press **Install** button to setup the package.",
        "package_description_launcher": "*This package is XXMI Launcher App itself and defines its features.*",
        "package_description_xxmi_libraries": "*XXMI Libraries package is custom 3dmigoto build fiddling with data between GPU and a game process.*",
        "package_description_model_importer": "*Model Importer package offers a set of API functions required for mods to work in given game.*",
        "package_release_notes": "{package_release_notes}\n\n<font color=\"#3366ff\">*<u>Left-Click</u> to open {package_name} Package GitHub releases for full changelog.*</font>\n<font color=\"#aaaaaa\">{package_description}</font>",
        "importer_folder": "Path to folder containing `Mods` folder, `d3dx.ini` and other {importer} resources.\n**Absolute**: Set any arbitrary folder, i.e. `C:/Games/{importer}/`.\n**Relative**: Set any folder **inside** the Launcher folder, i.e. `{importer}/` (default).",
        "overwrite_d3dx": "Enabled: {importer} updates will overwrite existing d3dx.ini to ensure its up-to-date state.\nDisabled: {importer} updates will keep existing d3dx.ini untouched.",
        "unsafe_mode": "Enabled: Allow 3-rd party 3dmigoto dlls.\nDisabled: Disallow 3-rd party 3dmigoto dlls.\nNote: If 3-rd party d3d11.dll does not support running from nested directories, it will fail to load.",
        "option_enabled_effect": "Enabled: Option will have stated effect.\nDisabled: Option will have no effect.",
        "run_pre_launch": "Windows console command to be executed before game exe launch.\nNote: If something needs to be done before the game start, do it here.",
        "wait_for_command": "Enabled: Wait for (blocking) command to finish its execution before launching the game exe.",
        "custom_launch": "Windows console command to run when Start button is pressed instead of default game exe launch.\nHint: If you want to change injection method only, just leave this field empty.\nWarning! This command also overrides `Launch Options` from General Settings.\n",
        "custom_launch_wwmi": "Warning! Make sure to pass `Client -DisableModule=streamline` argument to Client-Win64-Shipping.exe to force DX11 mode!\n",
        "custom_launch_example": "Note: If you want to start game exe with another custom exe, do it here.\nExample (equivalent for command internally used by launcher to start GI via FPS unlocker):\n`start /d \"C:\\Games\\XXMI Launcher\\Resources\\Packages\\GI-FPS-Unlocker\" unlockfps_nc.exe`",
        "custom_launch_inject_mode": "Defines the way of 3dmigoto injection into the game process started via Custom Launch.\n* Inject: Use WriteProcessMemory, more reliable but requires direct memory access.\n* Hook: Use SetWindowsHookEx, less reliable, but potentially less prominent for anti-cheats.\n* Bypass: Skip 3dmigoto injection and process only Inject Libraries field.",
        "run_post_load": "Windows console command to be executed after hooking d3d11.dll to launched game exe.\nNote: If something needs to be done after 3dmigoto injection, do it here.",
        "wait_post_command": "Enabled: Wait for (blocking) command to finish its execution before continuing program flow.",
        "inject_libraries": "List of additional DLL paths to inject into the game process. 1 path per line.\nInjection will be made via WriteProcessMemory method.\nExample (inject ReShade dll):\n`C:\\Games\\ReShade\\ReShade64.dll`",
        "enable_hunting": "Enabled: Allows to toggle Hunting Mode via Numpad [0] hotkey.\n* [d3dx.ini]: hunting = 2\nDisabled: Hunting Mode is hard disabled.\n* [d3dx.ini]: hunting = 0",
        "dump_shaders": "Enabled: Hunting Mode [Copy Hash] key also saves selected shader as file in ShaderFixes.\n* [d3dx.ini]: marking_actions = clipboard hlsl asm regex\nDisabled: Hunting Mode [Copy Hash] only copies hash of selected shader to clipboard.\n* [d3dx.ini]: marking_actions = clipboard",
        "mute_warnings": "Enabled: No error warnings or beeps whatsoever. Ignorance is bliss.\n* [d3dx.ini]: show_warnings = 0\nDisabled: Ini parser error warnings and beeps on F10 will haunt poor souls.\n* [d3dx.ini]: show_warnings = 1",
        "calls_logging": "Enabled: Log API usage.\n* [d3dx.ini]: calls = 1\nDisabled: Do not log calls. Maximum performance.\n* [d3dx.ini]: calls = 0",
        "debug_logging": "Enabled: Super verbose debug logging.\n* [d3dx.ini]: debug = 1\nDisabled: No debug logging. Maximum performance.\n* [d3dx.ini]: debug = 0",
        "enforce_rendering": "Enabled: Ensure {importer}-compatible [Rendering] section settings.\n* [d3dx.ini]: texture_hash = {texture_hash}\n* [d3dx.ini]: track_texture_updates = {track_texture_updates}\nDisabled: Settings above will not be forced into d3dx.ini."
    },
    "bottom_bar": {
        "initializing_game_launch": "Initializing game launch...",
        "hooking_library": "Hooking {library_name} to {process_name}...",
        "verifying_library": "Verifying {library_name} load into {process_name}...",
        "injecting_library": "Injecting {library_name} to {process_name}...",
        "launching_game": "Launching game...",
        "waiting_for_process": "Waiting for {process_name} to start...",
        "closing_launcher": "Closing launcher...",
        "checking_for_updates": "Checking for updates...",
        "connecting_to_github": "Connecting to GitHub...",
        "downloading_asset": "Downloading {asset_name}...",
        "verifying_asset_integrity": "Verifying {asset_name} integrity...",
        "initializing_update_installation": "Initializing update installation...",
        "writing_asset_on_disk": "Writing {asset_name} on disk...",
        "moving_asset": "Moving {asset_name}...",
        "unpacking_asset": "Unpacking {asset_name}...",
        "format_size": "{size:.2f}{unit}"
    },
    "messages": {
        "default_title": "Message",
        "error_title": "Error",
        "warning_title": "Warning",
        "info_title": "Info"
    },
    "updates": {
        "available_title": "Update Available"
    },
    "units": {
        "B": "B",
        "KB": "KB",
        "MB": "MB",
        "GB": "GB",
        "TB": "TB"
    }
} 